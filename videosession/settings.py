"""
Django settings for videosession project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import sys
from pathlib import Path
import os
import datetime
from datetime import timedelta
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')
MEDIA_DIR = os.path.join(BASE_DIR, 'media')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'p_w#!6jui_dlu78z7*ne8^y2z$+2q0u%2kqm*hg(ij9a2=1w^1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['d85180ab4079.ngrok.io', '127.0.0.1',
                 '0.0.0.0', '*', 'kodecrux-django.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    # 'admin_interface',
    # 'colorfield',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'user',
    'technology',
    'proposal',
    'job',
    'session',
    'customuser',
    'django_filters',
    'hire',
    'message',
    'corsheaders',
    'import_export',
    'oauth2_provider',
    'social_django',
    'rest_framework_social_oauth2',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'django.contrib.sites',
    'rest_framework.authtoken',
    'notification',
    'report',
    'whitenoise.runserver_nostatic',
    'storages',
    # 'cashfree'
]
IMPORT_EXPORT_USE_TRANSACTIONS = True
X_FRAME_OPTIONS = 'SAMEORIGIN'  # only if django version >= 3.0
SITE_ID = 1
REST_USE_JWT = True    # this is for djangorestframework-jwt

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',

]

CORS_ORIGIN_ALLOW_ALL = True


# Change `mysite` to the name of your project
ROOT_HOSTCONF = 'videosession.hosts'
# Name of the default host, we will create it in the next steps
DEFAULT_HOST = 'https://d95a9d4bc565.ngrok.io/random/'

ROOT_URLCONF = 'videosession.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'videosession.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {

    'default': {

        'ENGINE': 'django.db.backends.postgresql_psycopg2',

        'NAME': 'db120q17428642',

        'USER': 'oilbfitiepowqf',

        'PASSWORD': '3a4f71bd78c3e4f620db6a615a73457ffad3ac4d83663829eb83f0d329776f84',

        'HOST': 'ec2-3-95-85-91.compute-1.amazonaws.com',

        'PORT': '5432',

    }
}


STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# Heroku: Update database configuration from $DATABASE_URL.

db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

if sys.argv[1] != 'runserver':
    STATIC_ROOT = os.path.join(BASE_DIR, "static")
else:
    STATICFILE_DIRS = [
        "static/images",
        "static/css",
        "staticfiles", ]

STATIC_URL = '/static/'

AUTH_USER_MODEL = "customuser.CustomUser"


# Your Account Sid and Auth Token from twilio.com/console
# and set the environment variables. See http://twil.io/secure
ACCOUNT_SID = 'AC8e2a3cefda57282f6ef9800fe0063564'
AUTH_TOKEN = '533ea0a2260253cc505f001c3c9a336b'


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        # django-oauth-toolkit >= 1.0.0
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework_social_oauth2.authentication.SocialAuthentication',
        'rest_framework.authentication.TokenAuthentication',

    ],
}
JWT_AUTH = {
    # how long the original token is valid for
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=2),

    # allow refreshing of tokens
    'JWT_ALLOW_REFRESH': True,

    # this is the maximum time AFTER the token was issued that
    # it can be refreshed.  exprired tokens can't be refreshed.
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),
    'ACCESS_TOKEN_LIFETIME': timedelta(days=2),
    'JWT_PAYLOAD_HANDLER':
        'rest_framework_jwt.utils.jwt_payload_handler',
    'JWT_ENCODE_HANDLER':
    'rest_framework_jwt.utils.jwt_encode_handler',

    'JWT_DECODE_HANDLER':
    'rest_framework_jwt.utils.jwt_decode_handler',
}

AUTHENTICATION_BACKENDS = (
    # Facebook OAuth2
    'social.backends.google.GoogleOAuth2',  # /google-oauth2
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',

    # django-rest-framework-social-oauth2
    'rest_framework_social_oauth2.backends.DjangoOAuth2',

    # Django
    'django.contrib.auth.backends.ModelBackend',
)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# Facebook configuration

SOCIAL_AUTH_FACEBOOK_KEY = '375577453526335'
SOCIAL_AUTH_FACEBOOK_SECRET = 'b7d4c3ec6007a65963fdcf399556e794'
SOCIAL_AUTH_LOGIN_REDIRECT_URL = 'http://localhost/accounts/google/login/callback/'
# Define SOCIAL_AUTH_FACEBOOK_SCOPE to get extra permissions from facebook. Email is not sent by default, to get it, you must request the email permission:
SOCIAL_AUTH_FACEBOOK_SCOPE = ['sales@kodecrux.com']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id, name, email'}
SOCIAL_AUTH_FACEBOOK_SCOPE = ['sales@kodecrux.com']
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['sales@kodecrux.com', 'kode crux']
FACEBOOK_EXTENDED_PERMISSIONS = ['sales@kodecrux.com']
SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS = [
    'KodeCrux', 'first_name', 'sales@kodecrux.com']
SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '515126473370-emg4305tflmvetsklioachjblbekk066.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'QKyKcot2gC22h8kX_IUkxyqe'
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['sales@kodecrux.com']
SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details', )

SENDGRID_API_KEY = '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'
MAIL_HOST = 'smtp.sendgrid.net'
EMAIL_PORT = 587
EMAIL_USE_TLS = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_DIR = os.path.join(BASE_DIR, 'static')
MEDIA_DIR = os.path.join(BASE_DIR, 'media')
# STATICFILES_DIRS=[STATIC_DIR]
MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = '/media/'
print("MEDIA_URL", MEDIA_URL)

FILE_UPLOAD_HANDLERS = ("django_excel.ExcelMemoryFileUploadHandler",
                        "django_excel.TemporaryExcelFileUploadHandler")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

PAYMENT_VARIANTS = {
    'razorpay': ('django_payments_razorpay.RazorPayProvider', {
        'public_key': 'rzp_test_LmOgpIykhftvK7',
        'secret_key': 'rqWbFlWkSw3OaIeLZqEGgPFg'})}

APPEND_SLASH = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.mailendo.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'sales@kodecrux.com'
EMAIL_HOST_PASSWORD = 'Arunaprasad@2020'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
# SMTP_Hostname = 'smtp.mailendo.com'
# # EMAIL_HOST_USER = '7708db34-9af3-4b1d-9cca-eae97e8dd980'
# SMTP_Password = 'Arunaprasad@2020'
# SMTP_Username= 'sales@kodecrux.com'
# SMTP_Port = 25
# # SMTP_USE_TLS = True


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': ('%(asctime)s [%(process)d] [%(levelname)s] ' +
                       'pathname=%(pathname)s lineno=%(lineno)s ' +
                       'funcname=%(funcName)s %(message)s'),
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        }
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        'testlogger': {
            'handlers': ['console'],
            'level': 'INFO',
        }
    }
}

DEBUG_PROPAGATE_EXCEPTIONS = True

AWS_ACCESS_KEY_ID = 'AKIA2LP7VMV6E3R6JQGH'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'new-kode-crux'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_LOCATION = 'static'

# STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, 'static'),
# ]
# STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
# DEFAULT_STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# DEFAULT_FILE_STORAGE = 'videosession.storage_backends.MediaStorage'
